{"version":3,"sources":["App.js","serviceWorker.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","minWidth","menuButton","marginRight","spacing","bullet","display","margin","transform","title","fontSize","breakpoints","up","pos","marginBottom","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","card","transitionDuration","cardDetails","flex","cardMedia","mainGrid","marginTop","App","classes","useState","data","setData","React","setSearch","useEffect","a","axios","result","value","articles","filter","index","toLowerCase","includes","fetchData","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","onChange","e","target","Grid","container","map","item","xs","md","key","CardActionArea","component","href","url","Card","CardMedia","alt","image","urlToImage","CardContent","gutterBottom","description","Boolean","window","location","hostname","match","createMuiTheme","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7a42d267.chunk.js","sourcesContent":["/**\n * @author Aldi Mustafri\n * @email aldimustafri@live.com\n * @create date 2020-04-23 00:16:54\n * @modify date 2020-04-23 00:16:54\n * @desc [description]\n */\nimport React, { useState, useEffect } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n\n    minWidth: 275,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n\n  title: {\n    flexGrow: 1,\n\n    fontSize: 14,\n\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n\n  pos: {\n    marginBottom: 12,\n  },\n\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n\n  card: {\n    height: \"35vw\",\n    transitionDuration: \"0.3s\",\n    width: \"30vw\",\n    display: \"block\",\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n\n  mainGrid: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [search, setSearch] = React.useState([]);\n\n  const handleChange = (e) => {\n    setData(e.target.value);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        `http://newsapi.org/v2/top-headlines?country=id&apiKey=8c2de4fc4ebc472a9256aec9bd3636af`\n      );\n\n      const value = result.data.articles.filter((index) =>\n        index.title.toLowerCase().includes(data)\n      );\n      setSearch(value);\n    };\n    fetchData();\n  }, [data]);\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              React News Web\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Searchâ€¦\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n                onChange={handleChange}\n                value={data}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n\n      <div>\n        <Grid container spacing={4} className={classes.mainGrid}>\n          {search.map((item, index) => (\n            <Grid item xs={12} md={4} key={index}>\n              <CardActionArea component=\"a\" href={item.url} target=\"blank\">\n                <Card className={classes.card}>\n                  <CardMedia\n                    component=\"img\"\n                    alt={item.title}\n                    height=\"240\"\n                    image={item.urlToImage}\n                    title={item.title}\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h4\">\n                      {item.title}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {item.description}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </CardActionArea>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","/**\n * @author Aldi Mustafri\n * @email aldimustafri@live.com\n * @create date 2020-04-23 19:32:30\n * @modify date 2020-04-23 19:32:30\n * @desc [description]\n */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * @author Aldi Mustafri\n * @email aldimustafri@live.com\n * @create date 2020-04-23 00:14:36\n * @modify date 2020-04-23 00:14:36\n * @desc [description]\n */\nimport { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ede7f6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;","/**\n * @author Aldi Mustafri\n * @email aldimustafri@live.com\n * @create date 2020-04-23 00:14:33\n * @modify date 2020-04-23 00:14:33\n * @desc [description]\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"./theme\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n<CssBaseline>\n  <App/>\n</CssBaseline>\n  </ThemeProvider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}